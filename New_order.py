from tkinter import *
from tkinter import messagebox
from mysql.connector import MySQLConnection
import insert
from python_mysql_dbconfig import read_db_config


def new_order():
    newOrderForm = Tk()
    newOrderForm.title('Новый заказ')
    try:
        dbconfig = read_db_config()
        conn = MySQLConnection(**dbconfig)
        cursor = conn.cursor()
        cursor.execute("SELECT name FROM orderers")
        OrderersSelect = cursor.fetchall()
        Orderers = list()
        for item in OrderersSelect:
            item = list(item)
            Orderers.append(item[0])
            print(Orderers)
        cursor.execute("SELECT truckmodel FROM trucks")
        TrucksSelect = cursor.fetchall()
        trucks = list()
        for item in TrucksSelect:
            item = list(item)
            trucks.append(item[0])
            print(trucks)
        cursor.execute("SELECT NameTrailer FROM trailers")
        TrailerSelect = cursor.fetchall()
        trailers = list()
        for item in TrailerSelect:
            item = list(item)
            trailers.append(item[0])
            print(trailers)
        cursor.execute("SELECT Name FROM drivers")
        DriversSelect = cursor.fetchall()
        Drivers = list()
        for item in DriversSelect:
            item = list(item)
            Drivers.append(item[0])
            print(Drivers)
        OrderNumber = IntVar(newOrderForm)
        try:
            cursor.execute("SELECT max(idorder) FROM orders")
            s = 0
            for item in cursor:
                s = item[0]
            item = int(s)
            print(item)
            OrderNumber.set(item + 1)
        except:
            OrderNumber.set(1)
        label = Label(newOrderForm, text='Создание заказа', fg='#909')
        label.grid(row=0, column=1)
        labelNumber = Label(newOrderForm, text='Номер заказа')
        labelNumber.grid(row=1, column=0)
        labelNumberNumber = Label(newOrderForm, textvariable=OrderNumber)
        labelNumberNumber.grid(row=1, column=1)
        labelOrderer = Label(newOrderForm, text='Заказчик  ')
        labelOrderer.grid(row=2, column=0)
        optionsorderer = StringVar(newOrderForm)
        optionsorderer.trace_add('write', lambda *args: print(optionsorderer.get()))
        menuorderer = OptionMenu(newOrderForm, optionsorderer, 'пусто', *Orderers)
        menuorderer.grid(row=2, column=1)
        optionsorderer.set('')
        labelTruck = Label(newOrderForm, text='Грузовик  ')
        labelTruck.grid(row=3, column=0)
        optionsTrucks = StringVar(newOrderForm)
        optionsTrucks.trace_add('write', lambda *args: print(optionsTrucks.get()))
        menuTruck = OptionMenu(newOrderForm, optionsTrucks, 'пусто', *trucks)
        menuTruck.grid(row=3, column=1)
        labelTrailer = Label(newOrderForm, text='Прицеп')
        labelTrailer.grid(row=4, column=0)
        optionsTrailer = StringVar(newOrderForm)
        optionsTrailer.set('')
        optionsTrailer.trace_add('write', lambda *args: print(optionsTrailer.get()))
        menuTrailer = OptionMenu(newOrderForm, optionsTrailer, *trailers)
        menuTrailer.grid(row=4, column=1)
        labelDriver = Label(newOrderForm, text='Водитель')
        labelDriver.grid(row=5, column=0)
        optionsDriver = StringVar(newOrderForm)
        optionsDriver.trace_add('write', lambda *args: print(optionsDriver.get()))
        menuDriver = OptionMenu(newOrderForm, optionsDriver, 'пусто', *Drivers)
        menuDriver.grid(row=5, column=1)
        optionsorderer.set('')
        optionsDriver.set('')
        optionsTrucks.set('')
    except:
        messagebox.showerror("Ошибка!!!",
                             "Недостаточно информации для заполнения формы заказа\n Внесите данные о грузовиках, водителях и заказчиках")
        newOrderForm.destroy()
    labelTypeCargo = Label(newOrderForm, text='Тип груза  ')
    labelTypeCargo.grid(row=6, column=0)
    entrytypeCargo = Entry(newOrderForm)
    entrytypeCargo.grid(row=6, column=1)
    labelWeight = Label(newOrderForm, text="Вес груза(т)  ")
    labelWeight.grid(row=7, column=0)
    entryweight = Entry(newOrderForm)
    entryweight.grid(row=7, column=1)
    labelCost = Label(newOrderForm, text='Стоимость(р)  ')
    labelCost.grid(row=8, column=0)
    entryCost = Entry(newOrderForm)
    entryCost.grid(row=8, column=1)
    labelStart = Label(newOrderForm, text='Место отправления ')
    labelStart.grid(row=9, column=0)
    entryStart = Entry(newOrderForm)
    entryStart.grid(row=9, column=1)
    labelend = Label(newOrderForm, text='Место доставки ')
    labelend.grid(row=10, column=0)
    entryend = Entry(newOrderForm)
    entryend.grid(row=10, column=1)
    labelendtime = Label(newOrderForm, text='Дата доставки\n(ГГГГ/ММ/ДД)')
    labelendtime.grid(row=11, column=0)
    entryendtime = Entry(newOrderForm)
    entryendtime.grid(row=11, column=1)
    AddButton = Button(newOrderForm, text='Добавить',
                       command=lambda:  insert.insert_order(optionsorderer.get(),optionsTrucks.get(),optionsDriver.get(),optionsTrailer.get(),entrytypeCargo.get(),entryCost.get(),entryendtime.get(),entryStart.get(),entryend.get(),entryweight.get()))
    AddButton.grid(row=12, column=1)
    cursor.close()
    conn.close()